# 루트 노드(Root node) : 부모가 없는 노드, 트리는 하나의 루트 노드만을 가진다.
  부모 노드(Parent node) : 특정 노드를 감싸고 있는 바로 위의 상위 노드
  자식 노드(Children node) : 부모 노드 하위 노드
  형제 관계(Sibling) : 같은 레벨에 있는 노드들의 관계
  단말 노드(Terminal node | leaf node) : 자식이 없는 노드
  비단말 노드(Nonterminal node) : 단말노드의 반대
  차수(Degree) : 어떤 노드가 가지고 있는 자식 노드의 개수
  레벨(Level) : 트리의 각 층에 번호를 매기는 것. 루트의 레벨은 1
  깊이(Depth) : 루트에서 어떤 노드에 도달하기 위해 거쳐야 하는 간선의 수
  높이(Height) : 최대 레벨
  포리스트(Forest) : 트리들의 집합
  
# 이진트리 : 모든 노드가 2개의 서브트리를 가지고 있는 트리
            서브트리는 공집합일 수 있다.
            모든 노드의 차수는 2 이하
            공집합도 이진트리
  포화 이진 트리 : 모든 레벨의 노드가 꽉 차있는 이진 트리
                  단말 노드를 제외한 모든 노드의 차수가 2인 형태
  완전 이진 트리 : 단말 노드들이 트리의 왼쪽부터 차곡차곡 채워진 형태
                  무조건 왼쪽부터 채워져 있어야한다.
                  왼쪽 하위 트리 중 하나라도 비워져있다면 해당 안됨
                  
# 전위 순회(Preorder traversal) : Root Left Right
  중위 순회(Inorder traversal) : Left Root Right
  후위 순회(Postorder traversal) : Left Right Root

# 수식트리
  - 중위 표기법(중위 순회) : 2 + 3
  - 전위 표기법(전위 순회) : + 2 3
  - 후위 표기법(후위 순회) : 2 3 +
 
# 이진 탐색 트리
  - 이진 탐색의 정의 : 모든 원소는 서로 다른 유일한 키(값)을 가진다
                      왼쪽 서브 트리에 있는 원소들의 키는 그 루트의 키보다 작다
                      오른쪽 서브 트리에 있는 원소들의 키는 그 루트의 키보다 크다
                      왼쪽 서브 트리와 오른쪽 서브 트리도 이진 탐색 트리이다.
  - 삽입 : 키가 있는지 탐색 -> 탐색을 실패한 자리에 원소를 삽입
  - 삭제 : 노드를 삭제한 후 이진 탐색 트리의 성질을 깨뜨리면 안되기에 노드의 위치를 조정하는 과정이 필요(후속처리)
  
# 스레드 이진 트리
  - 사용이유 : 트리를 재귀로 구현 시 트리가 커질수록 비효율적
              사용하지 않는 NULL 링크까지 효율적 사용을 위함
              재귀 구조 없이 트리순회를 위함
  - 중위 선행자 : 왼쪽의 스레드. 중위 순회 시 현재 노드의 앞에 있는 노드를 가리키는 것
    중위 후속자 : 오른쪽의 스레드. 중위 순회 시 현재 노드의 다음 노드를 가리키는 것
