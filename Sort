# 삽입 정렬
  - "순서대로 하나씩 뽑으면서 앞쪽보다 작으면 맞는 위치에 삽입한다"
  - 단순하지만 비효율적인 방법
  - 안정적인 정렬
   
# 선택 정렬
  - "순서대로 최솟값을 찾고 배열의 맨 앞쪽부터 삽입힌다"
  - 단순하지만 비효율적인 방법
  - 불안정적인 정렬
  
# 버블 정렬
  - "순서대로 인접한 2개의 값을 비교하여 작은 수가 배열의 앞에 오도록 교환한다" 
  - 단순하지만 비효율적인 방법
  - 안정적인 정렬
   
# 퀵 정렬
  - "특정한 값을 피벗(Pivot)으로 잡고 이를 중심으로 왼쪽, 오른쪽으로 나눈다. 피벗을 제외한 왼쪽리스트와 오른쪽 리스트를 같은 방법으로 나눈다"
  - "리스트들이 더이상 나눠지지 않을때까지 반복"
  - 복잡하지만 효율적인 방법
  - 불안정적인 정렬
  
# 히프 정렬
  - "최소 히프(내림차순)나 최대 히프(오름차순)를 구성해 한번에 하나씩 요소를 힙에서 꺼내어 배열의 뒤에서부터 저장한다"
  - 복잡하지만 효율적인 방법
  - 불안정적인 정렬
  
# 합병 정렬
  - "배열을 하나씩 전부 분할하여 부분배열을 얻은 후 이를 결합한다"
  - 복잡하지만 효율적인 방법
  - 안정적인 정렬
   
# 기수 정렬
  - "10개의 배열에 기수(숫자의 자릿수) 별로 정렬 후 순서대로 정렬한다"
  - 30 22 21 -> 일의 자리수 정렬 -> 30 21 22 -> 십의 자리 수 정렬 -> 21 22 30
  - 복잡하지만 효율적인 방법
  - 안정적인 정렬
  
# 셸 정렬
  - "간격에 따라 계단처럼 쪼갠 후 행 별로 왼쪽 오른쪽 정렬을 진행한다. 다시 합친 후 다음 간격 수에 따라 다시 이 과정을 반복한다"
  - 간격은 갈수록 작아진다.
  - 불안정적인 정렬
  
  # 안정적 - 삽입, 버블, 합병, 기수
    불안정적 - 선택, 퀵, 히프, 셸
  # 효율적 - 퀵, 히프, 합병, 기수
    비효율적 - 삽입, 선택, 버블, 셸

![캡처](https://user-images.githubusercontent.com/42796952/85622280-9a200100-b6a1-11ea-8299-7fb3dd95d6ca.PNG)
